---
title: "Data Management and Analysis Workshop: Part 3"
format: pdf
editor: visual
---

# Data visualization

We will walk through some basic data cleaning, analysis, and visualization tasks using per pupil expenditures as a running example. The repository contains all the data and code we need, so you can just follow along! This notebook introduces data visualization.

## Set up

```{r}
# Install required packages.
req <- c("tidyverse")
new <- req[!(req %in% installed.packages()[, "Package"])]
if (length(new)) install.packages(new)

# Load libraries.
library(dplyr)
library(forcats)
library(ggplot2)
```

```{r}
# Identify inputs and outputs.
PWD <- getwd()
DTA <- file.path(PWD, "out", "data.rda")
OUT <- file.path(PWD, "out")
```

```{r}
# Load analysis file.
# This loads the dataset we created into the same namespace.
load(DTA)
head(dta)
```

## Plot distribution of per pupil expenditure

```{r}
# Select breaks for x-axis.
x_breaks <- c(1e3, 1e4, 1e5, 1e6, 1e7)
x_labels <- c("$1K", "$10K", "$100K", "$1M", "$10M")
```

```{r}
# Draw the figure.
ggplot(dta, aes(x = ppe)) +
  geom_histogram(bins = 100) +
  scale_x_log10(breaks = x_breaks, labels = x_labels) +
  annotation_logticks(side = "b") +
  theme_minimal() +
  labs(
    title = "Distribution of per pupil expenditure in public school districts",
    x = "Log per pupil expenditure",
    y = "Number of school districts"
  )

# Save the figure.
ggsave(file.path(OUT, "ppe-hist.png"))
```

```{r}
# Map new to old race category labels.
race_recode <- c(
  "Asian" = "asian",
  "Black" = "black",
  "Hispanic" = "hisp",
  "White" = "white",
  "Other" = "other",
  "No majority" = "none"
)

# Relabel and reorder race categories.
dta <- mutate(dta,
  maj_group2 = fct_recode(as.factor(maj_group), !!!race_recode),
  maj_group2 = fct_relevel(maj_group2, names(race_recode))
)
```

```{r}
# Draw the figure.
ggplot(dta, aes(x = ppe, color = maj_group2)) +
  geom_density() +
  scale_x_log10(breaks = x_breaks, labels = x_labels, limits = c(NA, 1e6)) +
  annotation_logticks(side = "b") +
  theme_minimal() +
  labs(
    title = "Distribution of per pupil expenditure in public school districts",
    x = "Log per pupil expenditure",
    y = "Density",
    color = "Majority group"
  )

# Save the figure.
ggsave(file.path(OUT, "ppe-dens.png"))
```

## Plot membership by revenue

```{r}
# Select breaks for PPE.
quantile(dta$ppe, c(0, 0.05, 0.25, 0.5, 0.75, 0.95))
breaks <- c(0, seq(10000, 20000, 2000), 30000, 40000)
ppe_breaks <- seq(from = 0, to = 40000, by = 10000)
ppe_labels <- c("$0", "$10K", "$20K", "$30K", "$40K")
```

```{r}
# Select breaks for x-axis.
x_breaks <- c(1, 1e1, 1e2, 1e3, 1e4, 1e5)
x_labels <- c("0", "10", "100", "1K", "10K", "100K")
```

```{r}
# Select breaks for y-axis.
y_breaks = c(1e5, 1e6, 1e7, 1e8, 1e9, 1e10)
y_labels = c("$100K", "$1M", "$10M", "$100M", "$1B", "$10B")
```

```{r}
# Set annotations for salient points in the data.
picks <- data.frame(
  leaid = c(4280230, 622710),
  label = c("Franklin County Career\nAnd Technology Center", "Los Angeles Unified"),
  hjust = c(0.25, 1.1),
  vjust = c(-0.6, 0.5)
)

# Merge onto coordinates.
picks <- left_join(picks, dta, by = "leaid", relationship = "one-to-one")
```

```{r}
# Draw the figure.
ggplot(dta, aes(x = tot, y = exp, color = ppe)) +
  geom_point(size = 0.8, alpha = 0.8, stroke = NA) +
  geom_point(data = picks, color = "black") +
  geom_text(
    data = picks,
    mapping = aes(label = label, hjust = hjust, vjust = vjust),
    size = 2,
    color = "black"
  ) +
  scale_x_log10(breaks = x_breaks, labels = x_labels) +
  scale_y_log10(breaks = y_breaks, labels = y_labels) +
  scale_color_stepsn(
    breaks = ppe_breaks,
    labels = ppe_labels,
    limits = c(min(ppe_breaks), max(ppe_breaks)),
    colors = c("#00429d", "#96ffea", "#ff005e", "#93003a")
  ) +
  facet_wrap(~ maj_group2) +
  theme_minimal() +
  labs(
    title = "Per pupil expenditure in public school districts by majority group",
    x = "Log number of students",
    y = "Log total expenditures",
    color = "PPE"
  )

# Save the figure.
ggsave(file.path(OUT, "pop-exp-ppe.png"))
```